AWSTemplateFormatVersion: '2010-09-09'
Description: 'Astra Infrastructure - Parent CloudFormation Stack'

Parameters:
  Environment:
    Type: String
    Description: Environment name
    Default: dev
  
  ProjectName:
    Type: String
    Description: Project name for resource naming
    Default: astra
  
  AWSAccountId:
    Type: String
    Description: AWS Account ID

Resources:
  # Phase 1: Core Infrastructure (S3 + Network)
  S3Stack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/s3.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
        AWSAccountId: !Ref AWSAccountId
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3Stack
    Properties:
      TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/network.yaml'
      Parameters:
        Environment: !Ref Environment
        ProjectName: !Ref ProjectName
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  
  #Phase 2 - Uncomment these stacks gradually
  # DynamoDB Resources Stack (depends on S3Stack)
  DynamoDBStack:
     Type: AWS::CloudFormation::Stack
     Properties:
       TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/dynamodb.yaml'
       Parameters:
         Environment: !Ref Environment
         ProjectName: !Ref ProjectName
       Tags:
         - Key: Project
           Value: !Ref ProjectName
         - Key: Environment
           Value: !Ref Environment

  # IAM Resources Stack (depends on S3Stack and DynamoDBStack)
  # IAMStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: [S3Stack, DynamoDBStack]
  #   Properties:
  #     TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/iam.yaml'
  #     Parameters:
  #       Environment: !Ref Environment
  #       ProjectName: !Ref ProjectName
  #       S3InputBucket: !GetAtt S3Stack.Outputs.InputBucketName
  #       DynamoDBTableArn: !GetAtt DynamoDBStack.Outputs.DataTableArn
  #     Tags:
  #       - Key: Project
  #         Value: !Ref ProjectName
  #       - Key: Environment
  #         Value: !Ref Environment

  # Lambda Resources Stack (depends on IAMStack and DynamoDBStack)
  # LambdaStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: [IAMStack, DynamoDBStack]
  #   Properties:
  #     TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/lambda.yaml'
  #     Parameters:
  #       Environment: !Ref Environment
  #       ProjectName: !Ref ProjectName
  #       S3InputBucket: !GetAtt S3Stack.Outputs.InputBucketName
  #       DynamoDBTableName: !GetAtt DynamoDBStack.Outputs.DataTableName
  #       LambdaRoleArn: !GetAtt IAMStack.Outputs.LambdaRoleArn
  #     Tags:
  #       - Key: Project
  #         Value: !Ref ProjectName
  #       - Key: Environment
  #         Value: !Ref Environment

  # Monitoring Resources Stack (depends on LambdaStack)
  # MonitoringStack:
  #   Type: AWS::CloudFormation::Stack
  #   DependsOn: LambdaStack
  #   Properties:
  #     TemplateURL: !Sub 'https://${ProjectName}-deployments-${Environment}-${AWSAccountId}.s3.${AWS::Region}.amazonaws.com/cloudformation/monitoring.yaml'
  #     Parameters:
  #       Environment: !Ref Environment
  #       ProjectName: !Ref ProjectName
  #       LambdaFunctionName: !GetAtt LambdaStack.Outputs.LambdaFunctionName
  #     Tags:
  #       - Key: Project
  #         Value: !Ref ProjectName
  #       - Key: Environment
  #         Value: !Ref Environment

Outputs:
  
  # Phase 1: S3 and Network Outputs
  InputBucketName:
    Description: S3 bucket for input files
    Value: !GetAtt S3Stack.Outputs.InputBucketName
    Export:
      Name: !Sub '${ProjectName}-InputBucket-${Environment}'
  
  InputBucketArn:
    Description: S3 bucket ARN for input files
    Value: !GetAtt S3Stack.Outputs.InputBucketArn
    Export:
      Name: !Sub '${ProjectName}-InputBucketArn-${Environment}'

  VpcId:
    Description: VPC ID
    Value: !GetAtt NetworkStack.Outputs.VpcId
    Export:
      Name: !Sub '${ProjectName}-VpcId-${Environment}'
  
  VpcCidrBlock:
    Description: VPC CIDR Block
    Value: !GetAtt NetworkStack.Outputs.VpcCidrBlock
    Export:
      Name: !Sub '${ProjectName}-VpcCidrBlock-${Environment}'
  
  PublicSubnetId:
    Description: Public Subnet ID
    Value: !GetAtt NetworkStack.Outputs.PublicSubnetId
    Export:
      Name: !Sub '${ProjectName}-PublicSubnetId-${Environment}'
  
  PrivateSubnetId:
    Description: Private Subnet ID
    Value: !GetAtt NetworkStack.Outputs.PrivateSubnetId
    Export:
      Name: !Sub '${ProjectName}-PrivateSubnetId-${Environment}'
  
  DefaultSecurityGroupId:
    Description: Default Security Group ID
    Value: !GetAtt NetworkStack.Outputs.DefaultSecurityGroupId
    Export:
      Name: !Sub '${ProjectName}-DefaultSecurityGroupId-${Environment}'

  # 
  # TODO: Phase 2 - Uncomment these outputs gradually
  # DynamoDB Outputs
  DataTableName:
    Description: DynamoDB table for processed data
    Value: !GetAtt DynamoDBStack.Outputs.DataTableName
    Export:
      Name: !Sub '${ProjectName}-DataTable-${Environment}'
  
  DataTableArn:
    Description: DynamoDB table ARN
    Value: !GetAtt DynamoDBStack.Outputs.DataTableArn
    Export:
      Name: !Sub '${ProjectName}-DataTableArn-${Environment}'
  
  StatusTableName:
    Description: DynamoDB table for file processing status
    Value: !GetAtt DynamoDBStack.Outputs.StatusTableName
    Export:
      Name: !Sub '${ProjectName}-StatusTable-${Environment}'
  
  StatusTableArn:
    Description: DynamoDB table ARN for file processing status
    Value: !GetAtt DynamoDBStack.Outputs.StatusTableArn
    Export:
      Name: !Sub '${ProjectName}-StatusTableArn-${Environment}'
  
  # IAM Outputs
  # LambdaRoleArn:
  #   Description: IAM role ARN for Lambda functions
  #   Value: !GetAtt IAMStack.Outputs.LambdaRoleArn
  #   Export:
  #     Name: !Sub '${ProjectName}-LambdaRole-${Environment}'
  
  # Lambda Outputs
  # LambdaFunctionName:
  #   Description: Lambda function name
  #   Value: !GetAtt LambdaStack.Outputs.LambdaFunctionName
  #   Export:
  #     Name: !Sub '${ProjectName}-LambdaFunction-${Environment}'
  
  # Monitoring Outputs
  # DashboardUrl:
  #   Description: CloudWatch Dashboard URL
  #   Value: !GetAtt MonitoringStack.Outputs.DashboardUrl
  #   Export:
  #     Name: !Sub '${ProjectName}-Dashboard-${Environment}'