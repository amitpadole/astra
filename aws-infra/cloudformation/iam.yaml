AWSTemplateFormatVersion: '2010-09-09'
Description: 'IAM Resources for Blot Parser - Roles and policies'

Parameters:
  Environment:
    Type: String
    Description: Environment name
  
  ProjectName:
    Type: String
    Description: Project name for resource naming
  
  S3InputBucket:
    Type: String
    Description: S3 input bucket name
  
  DynamoDBTableArn:
    Type: String
    Description: DynamoDB table ARN

Resources:
  # IAM Role for Lambda functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BlotParserS3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub 'arn:aws:s3:::${S3InputBucket}/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: !Sub 'arn:aws:s3:::${S3InputBucket}'
        - PolicyName: BlotParserDynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: 
                  - !Ref DynamoDBTableArn
                  - !Sub '${DynamoDBTableArn}/index/*'
        - PolicyName: BlotParserCloudWatchPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ProjectName}-*'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: LambdaExecution

  # IAM Role for CloudFormation deployments
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-cloudformation-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Policies:
        - PolicyName: BlotParserDeploymentPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:aws:s3:::${ProjectName}-deployments-${Environment}-*/*'
              - Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:ListFunctions
                Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ProjectName}-*'
      Tags:
        - Key: Project
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: CloudFormationDeployment

  # IAM Policy for S3 bucket notifications
  S3NotificationPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-s3-notification-policy-${Environment}'
      Roles:
        - !Ref CloudFormationRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutBucketNotification
              - s3:GetBucketNotification
            Resource: !Sub 'arn:aws:s3:::${S3InputBucket}'
          - Effect: Allow
            Action:
              - lambda:AddPermission
              - lambda:RemovePermission
              - lambda:GetPolicy
            Resource: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${ProjectName}-*'

Outputs:
  LambdaRoleArn:
    Description: IAM role ARN for Lambda functions
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-LambdaRole-${Environment}'
  
  LambdaRoleName:
    Description: IAM role name for Lambda functions
    Value: !Ref LambdaExecutionRole
    Export:
      Name: !Sub '${ProjectName}-LambdaRoleName-${Environment}'
  
  CloudFormationRoleArn:
    Description: IAM role ARN for CloudFormation deployments
    Value: !GetAtt CloudFormationRole.Arn
    Export:
      Name: !Sub '${ProjectName}-CloudFormationRole-${Environment}'
