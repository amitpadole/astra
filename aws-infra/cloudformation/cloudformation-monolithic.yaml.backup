AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Infrastructure for Blot Parser - S3, DynamoDB, and IAM roles'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name
  
  ProjectName:
    Type: String
    Default: blot-parser
    Description: Project name for resource naming

Resources:
  # S3 Bucket for input files
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-input-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt BlotParserLambda.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .xlsx
                  - Name: suffix
                    Value: .xls

  # DynamoDB Table for processed data
  DataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-data-${Environment}'
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: vendor
          AttributeType: S
        - AttributeName: processed_at
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: VendorIndex
          KeySchema:
            - AttributeName: vendor
              KeyType: HASH
            - AttributeName: processed_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  # IAM Role for Lambda functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: BlotParserPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: !Sub '${InputBucket}/*'
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: 
                  - !GetAtt DataTable.Arn
                  - !Sub '${DataTable.Arn}/index/*'

  # S3 Bucket for Lambda deployments
  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-deployments-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled

Outputs:
  InputBucketName:
    Description: S3 bucket for input files
    Value: !Ref InputBucket
    Export:
      Name: !Sub '${ProjectName}-InputBucket-${Environment}'
  
  DataTableName:
    Description: DynamoDB table for processed data
    Value: !Ref DataTable
    Export:
      Name: !Sub '${ProjectName}-DataTable-${Environment}'
  
  LambdaRoleArn:
    Description: IAM role ARN for Lambda functions
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-LambdaRole-${Environment}'
  
  DeploymentBucketName:
    Description: S3 bucket for Lambda deployments
    Value: !Ref DeploymentBucket
    Export:
      Name: !Sub '${ProjectName}-DeploymentBucket-${Environment}'
