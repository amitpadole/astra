name: Cleanup Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to cleanup'
        required: true
        type: choice
        options:
        - dev
        - prod
      confirm:
        description: 'Type "DELETE" to confirm cleanup'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: blot-parser

jobs:
  cleanup:
    if: github.event.inputs.confirm == 'DELETE'
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set environment variables
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "STACK_NAME=blot-parser-infrastructure-${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Empty S3 buckets
        run: |
          # Get bucket names from CloudFormation stack
          INPUT_BUCKET=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`InputBucketName`].OutputValue' \
            --output text \
            --region $AWS_REGION 2>/dev/null || echo "")
          
          DEPLOYMENT_BUCKET=$(aws cloudformation describe-stacks \
            --stack-name $STACK_NAME \
            --query 'Stacks[0].Outputs[?OutputKey==`DeploymentBucketName`].OutputValue' \
            --output text \
            --region $AWS_REGION 2>/dev/null || echo "")
          
          if [ -n "$INPUT_BUCKET" ]; then
            echo "Emptying input bucket: $INPUT_BUCKET"
            aws s3 rm "s3://$INPUT_BUCKET" --recursive || echo "Failed to empty input bucket"
          fi
          
          if [ -n "$DEPLOYMENT_BUCKET" ]; then
            echo "Emptying deployment bucket: $DEPLOYMENT_BUCKET"
            aws s3 rm "s3://$DEPLOYMENT_BUCKET" --recursive || echo "Failed to empty deployment bucket"
          fi

      - name: Delete CloudFormation stack
        run: |
          echo "Deleting CloudFormation stack: $STACK_NAME"
          aws cloudformation delete-stack \
            --stack-name $STACK_NAME \
            --region $AWS_REGION
          
          echo "Waiting for stack deletion to complete..."
          aws cloudformation wait stack-delete-complete \
            --stack-name $STACK_NAME \
            --region $AWS_REGION || echo "Stack deletion completed or failed"

      - name: Cleanup confirmation
        run: |
          echo "âœ… Cleanup completed for ${{ github.event.inputs.environment }} environment"
          echo "Stack: $STACK_NAME has been deleted"
